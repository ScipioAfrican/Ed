
НАЗНАЧЕНИЕ
----------
Универсальный makefile для компиляции проектов с/c++ c использованием компилятора gcc/g++.
Файл не требует какой-либо внешней конфигурационой обвязки в виде сценариев или bat-файлов.


ИСХОДНЫЕ ДАННЫЕ
---------------
Начальная структура проекта должна содержать только каталог исходных файлов src/ произвольной внутренней структуры.


ЦЕЛИ КОМПИЛЯЦИИ
---------------
При компиляции создаются 2 каталога:
	bin/ - для исполняемых файлов
	obj/ - для объектных файлов.
Каталог bin/ содержит исполняемые файлы и не содержит подкаталогов. 


КОМПИЛЯЦИЯ РЕЛИЗНОЙ ВЕРСИИ
--------------------------
Вызов make без аргументов или с любым значением переменной CTYPE кроме CTYPE=debug компилирует релизную версию. 
Примеры:
	make
	make CTYPE=release
	make CTYPE=final
Синтаксис make all НЕ ИСПОЛЬЗУЕТСЯ! 
В каталоге obj при компиляции релизной версии создается следующая структура файлов:

	obj--------------------------------------
		|release
			|src
				|повторяеться структура из src/

Имя исполняемого файла для релизной версии определяется переменной EXECUTABLE_NAMES в makefile.

 
КОМПИЛЯЦИЯ ОТЛАДОЧНОЙ ВЕРСИИ
----------------------------
Для отладки программы make должена обязательно запускаться с указанием пременной CTYPE=debug
Пример:
 	make CTYPE=debug
Если CTYPE имеет любое другое значение кроме debug или отсутствует, то будет компилироваться релизная версия.
При компиляции отладочной версии создается следующая структура файлов:

	obj--------------------------------------
		|debug
			|src
				|повторяеться структура из src/

Имя исполняемого файла для отладочной версии определяется как EXECUTABLE_NAMES_debug.
 

ОЧИСТКА ФАЙЛОВ-ЦЕЛЕЙ
--------------------
Очистка осуществляется путем указания следующих целей:
	cleanobj - удалаются все объектные файлы путем удаления каталога obj/
	cleanbin - удалаются все исполняемые файлы путем удаления каталога bin/
	clean - удалается всё путем удаления каталогов bin/ и obj/
Примеры:
	make cleanbin
	make cleanobj
	make clean


